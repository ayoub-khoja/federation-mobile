/**
 * Script de test sp√©cifique pour iOS FCM
 * Usage: node scripts/test-ios-fcm.js
 */

const fs = require('fs');

console.log('üçé Test de compatibilit√© iOS FCM...\n');

// V√©rifier les fichiers modifi√©s
const modifiedFiles = [
  'src/config/firebase.ts',
  'src/hooks/useFCMNotifications.ts',
  'src/components/FCMTest.tsx',
  'src/components/PushNotificationManager.tsx'
];

console.log('üìÅ V√©rification des fichiers modifi√©s:');
modifiedFiles.forEach(file => {
  const exists = fs.existsSync(file);
  console.log(`  ${exists ? '‚úÖ' : '‚ùå'} ${file}`);
});

// V√©rifier la d√©tection iOS Safari
console.log('\nüçé V√©rification de la d√©tection iOS Safari:');
try {
  const firebaseConfig = fs.readFileSync('src/config/firebase.ts', 'utf8');
  
  const iosChecks = [
    { name: 'D√©tection iOS', pattern: /iPhone|iPad|iPod/i },
    { name: 'D√©tection Safari', pattern: /Safari.*Chrome/i },
    { name: 'Blocage iOS Safari', pattern: /iOS Safari ne supporte pas/ },
    { name: 'Recommandation Chrome', pattern: /Chrome ou Firefox sur iOS/ }
  ];
  
  iosChecks.forEach(check => {
    const found = check.pattern.test(firebaseConfig);
    console.log(`  ${found ? '‚úÖ' : '‚ùå'} ${check.name}`);
  });
} catch (error) {
  console.log('  ‚ùå Impossible de lire firebase.ts');
}

// V√©rifier le hook FCM
console.log('\nüé£ V√©rification du hook FCM iOS:');
try {
  const hookFile = fs.readFileSync('src/hooks/useFCMNotifications.ts', 'utf8');
  
  const hookChecks = [
    { name: 'D√©tection iOS', pattern: /isIOS/ },
    { name: 'D√©tection Safari', pattern: /isSafari/ },
    { name: 'Message iOS Safari', pattern: /iOS Safari ne supporte pas/ },
    { name: 'Recommandation navigateur', pattern: /Chrome ou Firefox sur iOS/ }
  ];
  
  hookChecks.forEach(check => {
    const found = check.pattern.test(hookFile);
    console.log(`  ${found ? '‚úÖ' : '‚ùå'} ${check.name}`);
  });
} catch (error) {
  console.log('  ‚ùå Impossible de lire useFCMNotifications.ts');
}

// V√©rifier le composant FCMTest
console.log('\nüß™ V√©rification du composant FCMTest iOS:');
try {
  const testFile = fs.readFileSync('src/components/FCMTest.tsx', 'utf8');
  
  const testChecks = [
    { name: 'D√©tection iOS Safari', pattern: /iPhone.*iPad.*iPod.*Safari.*Chrome/ },
    { name: 'Message iOS Safari', pattern: /iOS Safari d√©tect√©/ },
    { name: 'Instructions Chrome', pattern: /T√©l√©chargez Chrome ou Firefox/ },
    { name: 'Instructions App Store', pattern: /App Store/ }
  ];
  
  testChecks.forEach(check => {
    const found = check.pattern.test(testFile);
    console.log(`  ${found ? '‚úÖ' : '‚ùå'} ${check.name}`);
  });
} catch (error) {
  console.log('  ‚ùå Impossible de lire FCMTest.tsx');
}

// V√©rifier le composant PushNotificationManager
console.log('\nüîî V√©rification du composant PushNotificationManager iOS:');
try {
  const managerFile = fs.readFileSync('src/components/PushNotificationManager.tsx', 'utf8');
  
  const managerChecks = [
    { name: 'D√©tection iOS Safari', pattern: /isIOS.*isSafari/ },
    { name: 'Message conditionnel', pattern: /iOS Safari ne supporte pas/ },
    { name: 'Instructions Chrome', pattern: /T√©l√©chargez Chrome ou Firefox/ },
    { name: 'D√©tails techniques iOS', pattern: /iOS Safari.*‚úÖ.*‚ùå/ }
  ];
  
  managerChecks.forEach(check => {
    const found = check.pattern.test(managerFile);
    console.log(`  ${found ? '‚úÖ' : '‚ùå'} ${check.name}`);
  });
} catch (error) {
  console.log('  ‚ùå Impossible de lire PushNotificationManager.tsx');
}

console.log('\nüçé Probl√®me iOS Safari expliqu√©:');
console.log('  ‚Ä¢ iOS Safari ne supporte pas les Service Workers de la m√™me mani√®re');
console.log('  ‚Ä¢ Les APIs PushManager et Notification ne sont pas disponibles');
console.log('  ‚Ä¢ Firebase FCM n√©cessite ces APIs pour fonctionner');
console.log('  ‚Ä¢ Chrome et Firefox sur iOS utilisent le moteur WebKit mais avec des APIs √©tendues');

console.log('\nüì± Solutions pour iOS:');
console.log('  1. T√©l√©chargez Chrome ou Firefox sur l\'App Store');
console.log('  2. Ouvrez https://federation-mobile.vercel.app/test-fcm dans Chrome/Firefox');
console.log('  3. Activez les notifications dans les param√®tres du navigateur');
console.log('  4. Testez l\'abonnement aux notifications');

console.log('\nüîç Test sur iOS:');
console.log('  1. Ouvrez Safari sur votre iPhone');
console.log('  2. Allez sur https://federation-mobile.vercel.app/test-fcm');
console.log('  3. V√©rifiez que le message iOS Safari s\'affiche');
console.log('  4. T√©l√©chargez Chrome ou Firefox');
console.log('  5. Testez dans Chrome/Firefox');

console.log('\n‚úÖ R√©sultat attendu:');
console.log('  ‚Ä¢ Safari : Message "iOS Safari ne supporte pas les notifications push"');
console.log('  ‚Ä¢ Chrome/Firefox : Notifications push fonctionnelles');
console.log('  ‚Ä¢ Boutons d\'abonnement visibles dans Chrome/Firefox');
console.log('  ‚Ä¢ Diagnostic complet dans les deux navigateurs');
